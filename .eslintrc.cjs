module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'airbnb',
    'airbnb-typescript',
    'plugin:import/typescript',
    'plugin:prettier/recommended',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: [
    '.eslintrc.json',
    'package-lock.json',
    'package.json',
    'postcss.config.js',
    'tailwind.config.js',
    '**/public/*.js',
    'vite.config.ts',
    'tsconfig.json',
    'tsconfig.node.json',
  ],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaVersion: 'latest',
    extraFileExtensions: ['.json'],
    sourceType: 'module',
    project: './tsconfig.json',
  },
  plugins: [
    'react',
    '@typescript-eslint',
    'jsx-a11y',
    'prettier',
    'react-refresh',
  ],
  rules: {
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
    '@typescript-eslint/comma-dangle': 'off',
    '@typescript-eslint/indent': 'off',
    '@typescript-eslint/no-explicit-any': 'error',
    '@typescript-eslint/no-unused-expressions': [
      'error',
      {
        allowShortCircuit: true,
      },
    ],
    'consistent-return': 'off',
    curly: 'off',
    'implicit-arrow-linebreak': 'off',
    'import/no-cycle': 'off',
    'import/prefer-default-export': 'off',
    'jsx-a11y/click-events-have-key-events': 'off',
    'jsx-a11y/control-has-associated-label': 'off',
    'jsx-a11y/label-has-associated-control': 'off',
    'jsx-a11y/no-noninteractive-element-interactions': 'warn',
    'jsx-a11y/no-static-element-interactions': 'off',
    'jsx-quotes': ['off', 'prefer-single'],
    'max-len': 'off',
    'nonblock-statement-body-position': 'off',
    'no-async-promise-executor': 'off',
    'no-param-reassign': ['error', { props: false }],
    'no-useless-catch': 'off',
    'object-curly-newline': 'off',
    'operator-linebreak': 'off',
    'prettier/prettier': ['error', { endOfLine: 'auto' }],
    quotes: 'off',
    'require-await': 'error',
    'react/button-has-type': 'off',
    'react/jsx-no-useless-fragment': [
      'error',
      {
        allowExpressions: true,
      },
    ],
    'react/jsx-props-no-spreading': 'off',
    'react/react-in-jsx-scope': 'off',
    'react-hooks/exhaustive-deps': 'error',
  },
};
